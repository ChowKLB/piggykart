databases:
  - name: maybe
    user: maybe
    plan: free

services:
  - type: web
    plan: free
    autoDeploy: false
    runtime: ruby
    name: maybe
    repo: https://github.com/zachgoll/maybe.git
    branch: self-hosting
    healthCheckPath: /up
    buildCommand: "./bin/render-build.sh"
    preDeployCommand: "bundle exec rails db:migrate"
    startCommand: "bundle exec rails server"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: maybe
          property: connectionString

      - key: SELF_HOSTING_ENABLED
        value: true
      - key: HOSTING_PLATFORM
        value: render

      # Since the app is self-hosted, we cannot use master.key to encrypt credentials.  App depends entirely on ENV variables
      # https://api.rubyonrails.org/v7.1.3.2/classes/Rails/Application.html#method-i-secret_key_base
      #
      # To generate this, run: `openssl rand -hex 64` or `rails secret`
      - key: SECRET_KEY_BASE
        sync: false

      - key: WEB_CONCURRENCY
        value: 2
      - key: GOOD_JOB_EXECUTION_MODE
        value: async # Typically, `external` is used in prod, but this avoids another cron service and is generally fine for a self-hoster given low traffic

      # The app uses this info to know which repo to fetch latest commit data from for upgrades
      # This should MATCH the `repo` and `branch` keys in the config above ALWAYS
      - key: GITHUB_REPO_OWNER
        value: zachgoll
      - key: GITHUB_REPO_NAME
        value: maybe
      - key: GITHUB_REPO_BRANCH
        value: self-hosting

      # Allows your self-hosted instance to auto-upgrade itself
      - key: AUTO_UPGRADES_MODE
        value: enabled
      - key: AUTO_UPGRADES_TARGET
        value: none

      # If you upgrade your instance to a paid plan, you can set this to false (or remove it)
      # See note in `render-build.sh` script.
      - key: RUN_DB_MIGRATIONS_IN_BUILD_STEP
        value: true
